version: '3'

services:

  orion:
    image: fiware/orion:${ORION_VERSION:-3.3.1}
    ports:
      - "1026:1026"
    command: -logLevel DEBUG -noCache -dbhost mongo
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:1026/version"]
      interval: 1m
      timeout: 10s
      retries: 3

  quantumleap:
    image: orchestracities/quantumleap:${QL_VERSION:-latest}
    ports:
      - "8668:8668"
    depends_on:
      - mongo
      - orion
      - crate
    environment:
      - CRATE_HOST=${CRATE_HOST:-crate}
      - USE_GEOCODING=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOGLEVEL=DEBUG

  mongo:
    image: mongo:${MONGO_VERSION:-4.4}
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  crate:
    image: crate:${CRATE_VERSION:-4.6.7}
    command: crate -Cauth.host_based.enabled=false
      -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    environment:
      - LOG4J_FORMAT_MSG_NO_LOOKUPS=true
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
    volumes:
      - cratedata:/data

  timescale:
    image: timescale/timescaledb-postgis:${TIMESCALE_VERSION:-2.3.0-pg13}
    ports:
      - "5432:5432"
      # Don't expose container port 5432 with the same number outside of the
      # swarm. In the Travis test env, there's already a PG instance running
      # on port 5432!
    environment:
      - POSTGRES_PASSWORD=*

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - crate

  redis:
    image: redis:${REDIS_VERSION:-6.2.3}
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

volumes:
  mongodata:
  cratedata:
  redisdata:

networks:
    default:
