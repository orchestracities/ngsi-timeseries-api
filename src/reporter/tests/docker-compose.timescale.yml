version: '3'

services:

  timescale:
    image: timescale/timescaledb-postgis:${TIMESCALE_VERSION}
    ports:
      - "54320:5432"
      # Don't expose container port 5432 with the same number outside of the
      # swarm. In the Travis test env, there's already a PG instance running
      # on port 5432!
    networks:
      - reportertests
    environment:
      - POSTGRES_PASSWORD=*

  quantumleap-db-setup:
    build: ../../../timescale-container/
    image: quantumleap-db-setup
    depends_on:
      - timescale
    networks:
      - reportertests
    environment:
      - QL_DB_PASS=*
      - QL_DB_INIT_DIR=/ql-db-init
      - PG_HOST=timescale
      - PG_PASS=*

  quantumleap:
    build: ../../../
    image: smartsdk/quantumleap
    ports:
      - "8668:8668"
    depends_on:
      - timescale
    networks:
      - reportertests
    environment:
      - USE_GEOCODING=False
      - QL_DEFAULT_DB=timescale
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=54320
      - LOGLEVEL=DEBUG

networks:
  reportertests:
    driver: bridge

# TODO: QL PG host.
# Setting POSTGRES_HOST=timescale doesn't work. The driver fails to connect,
# see debug session below. Why is that? Setting POSTGRES_HOST=${POSTGRES_HOST}
# as done in the above quantumleap service stanza works on my machine but
# I'm not entirely sure it's 100% portable...
#
# Here's the transcript of a debug session on my machine.
#
# $ docker-compose -f docker-compose.timescale.yml up -d
# $ docker ps
# CONTAINER ID        IMAGE                   ...
# 3e516e0ebba4        smartsdk/quantumleap     ...
# $ docker exec -it 3e516e0ebba4 sh
#
# /src/ngsi-timeseries-api/src # printenv
# ...
# POSTGRES_HOST=192.0.0.1
# LOGLEVEL=DEBUG
# ...
# POSTGRES_PORT=54320
# QL_DEFAULT_DB=timescale
# ...
#
# /src/ngsi-timeseries-api/src # nslookup timescale
# Server:		127.0.0.11
# Address:	127.0.0.11:53
#
# Non-authoritative answer:
# Non-authoritative answer:
# Name:	timescale
# Address: 172.28.0.2
#
# /src/ngsi-timeseries-api/src # ping -c 1 timescale
# PING timescale (172.28.0.2): 56 data bytes
# ...
# 1 packets transmitted, 1 packets received, 0% packet loss
# ...
#
# /src/ngsi-timeseries-api/src # python
# >>> import pg8000
# >>> pg8000.connect(host='timescale', port=54320,
#                    database='quantumleap', user='quantumleap', password='*')
# ...
# pg8000.exceptions.InterfaceError: Can't create a connection to host
#        timescale and port 54320 (timeout is None and source_address is None).
# >>> pg8000.connect(host='172.28.0.2', port=54320,
#                    database='quantumleap', user='quantumleap', password='*')
# ...
# pg8000.exceptions.InterfaceError: Can't create a connection to host
#        172.28.0.2 and port 54320 (timeout is None and source_address is None).
# >>> pg8000.connect(host='192.0.0.1', port=54320,
#                    database='quantumleap', user='quantumleap', password='*')
# <pg8000.core.Connection object at 0x7f71228f7430>
#
# >>> quit()
# /src/ngsi-timeseries-api/src # exit
#
# $ psql postgres://postgres:*@localhost:54320 -c 'SELECT * FROM pg_hba_file_rules'
#  line_number | type  |   database    | user_name |  address  |                 netmask                 | auth_method | options | error
# -------------+-------+---------------+-----------+-----------+-----------------------------------------+-------------+---------+-------
#           84 | local | {all}         | {all}     |           |                                         | trust       |         |
#           86 | host  | {all}         | {all}     | 127.0.0.1 | 255.255.255.255                         | trust       |         |
#           88 | host  | {all}         | {all}     | ::1       | ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff | trust       |         |
#           91 | local | {replication} | {all}     |           |                                         | trust       |         |
#           92 | host  | {replication} | {all}     | 127.0.0.1 | 255.255.255.255                         | trust       |         |
#           93 | host  | {replication} | {all}     | ::1       | ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff | trust       |         |
#           95 | host  | {all}         | {all}     | all       |                                         | md5         |         |
#