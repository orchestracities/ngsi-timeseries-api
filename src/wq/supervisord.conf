[supervisord]
nodaemon=true
logfile=/tmp/supervisord.log
pidfile=/tmp/supervisord.pid
childlogdir=/tmp

[program:wq]
command=python wq up
process_name=wq-%(process_num)s
numprocs=%(ENV_WQ_WORKERS)s
numprocs_start=1

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
; lifted from: https://github.com/RandyDeng/rq-docker-supervisor/
stopsignal=TERM

# Always restart RQ, regardless of exit code.
autorestart=true

# Attempt to restart RQ at most 10 times. Supervisor will wait x[k] seconds
# between attempts, where x[k+1] = x[k] + 1. E.g. with 3 retries, the first
# retry happens after 1 sec from the start, the second after 3, the third 5
# secs from the start.
startretries=10

# Quit Supervisor after it has unsuccessfully restarted RQ `startretries`
# times. On the last unsuccessful attempt, Supervisor transitions the RQ
# process to the fatal state.
# See:
# - http://supervisord.org/subprocess.html
# - http://supervisord.org/events.html
# - https://github.com/Supervisor/supervisor/issues/733
# - https://github.com/Supervisor/supervisor/issues/712
# - https://serverfault.com/questions/760726
[eventlistener:exit_after_max_retries]
events=PROCESS_STATE_FATAL
command=sh -c "printf 'READY\n' && while read line; do kill -SIGTERM $PPID; done < /dev/stdin"
numprocs=1
