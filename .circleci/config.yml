version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2004:202008-01
      docker_layer_caching: true    # default - false
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run: docker build -t orchestracities/quantumleap .
      - run: source deps.env && cd docker && docker-compose pull
  test_translator:
    parameters:
      crate-version:
        type: string
      timescale-version:
        type: string
    machine:
      image: ubuntu-2004:202008-01
      docker_layer_caching: true    # default - false
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
            export PIPENV_SHELL=no
            export WORKON_HOME=~/.venv
            sudo sysctl -w vm.max_map_count=262144
            source setup_dev_env.sh
            export CRATE_VERSION=<< parameters.crate-version >>
            export TIMESCALE_VERSION=<< parameters.timescale-version >>
            export tests=translator
            pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
            pip3 install --upgrade pyyaml coveralls
            coveralls
  test_reporter:
    machine:
      image: ubuntu-2004:202008-01
      docker_layer_caching: true    # default - false
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
            export PIPENV_SHELL=no
            export WORKON_HOME=~/.venv
            sudo sysctl -w vm.max_map_count=262144
            source setup_dev_env.sh
            export tests=reporter
            pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
            pip3 install --upgrade pyyaml coveralls
            coveralls
  test_integration:
    machine:
      image: ubuntu-2004:202008-01
      docker_layer_caching: true    # default - false
    parameters:
      orion-version:
        type: string
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
            export PIPENV_SHELL=no
            export WORKON_HOME=~/.venv
            sudo sysctl -w vm.max_map_count=262144
            source setup_dev_env.sh
            export ORION_VERSION=<< parameters.orion-version >>
            export tests=integration
            pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
            pip3 install --upgrade pyyaml coveralls
            coveralls
  test_others:
    machine:
      image: ubuntu-2004:202008-01
      docker_layer_caching: true    # default - false
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
            export PIPENV_SHELL=no
            export WORKON_HOME=~/.venv
            sudo sysctl -w vm.max_map_count=262144
            source setup_dev_env.sh
            export tests=others
            pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
            pip3 install --upgrade pyyaml coveralls
            coveralls
  coveralls:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run:
          name: Upload coverage data to coveralls.io
          command: |
            pip3 install --upgrade pyyaml coveralls
            coveralls --finish
workflows:
  main:
    jobs:
      - build
      - test_translator:
          requires:
            - build
          matrix:
            parameters:
              crate-version: ["4.6.7", "4.2.7"]
              timescale-version: ["2.3.0-pg13", "1.7.5-pg12"]
      - test_reporter:
          requires:
            - build
      - test_integration:
          requires:
            - build
          matrix:
            parameters:
              orion-version: ["3.3.1", "2.4.2"]
      - test_others:
          requires:
            - build
      - coveralls:
          requires:
            - test_translator
            - test_reporter
            - test_integration
            - test_others