version: 2.1

jobs: 
  build:
    machine: true
    steps:
      - checkout
      - run: docker build -t orchestracities/quantumleap .
  test_translator:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib 
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip3 install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
              export SHELL=no
              export WORKON_HOME=~/.venv
              sudo sysctl -w vm.max_map_count=262144
              source setup_dev_env.sh
              export tests=translator
              pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
              pip3 install --upgrade coveralls
              coveralls
  test_reporter:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib 
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip3 install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
              export SHELL=no
              export WORKON_HOME=~/.venv
              sudo sysctl -w vm.max_map_count=262144
              source setup_dev_env.sh
              export tests=reporter
              pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
              pip3 install --upgrade coveralls
              coveralls
  test_others:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8
      - run: sudo chown -R circleci:circleci /opt/circleci/.pyenv/versions/3.8.5/lib 
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            export WORKON_HOME=~/.venv
            pip3 install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8"
            - "/opt/circleci/.pyenv/versions/3.8.5/lib"
      - run:
          command: |
              export SHELL=no
              export WORKON_HOME=~/.venv
              sudo sysctl -w vm.max_map_count=262144
              source setup_dev_env.sh
              export tests=others
              pipenv run sh run_tests.sh
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload coverage data to coveralls.io
          command: |
              pip3 install --upgrade coveralls
              coveralls
  coveralls:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - run:
          name: Upload coverage data to coveralls.io
          command: |
              pip3 install --upgrade coveralls
              coveralls --finish
workflows:
  main:
    jobs:
      - build
      - test_translator:
          requires:
            - build
      - test_reporter:
          requires:
            - build
      - test_others:
          requires:
            - build
      - coveralls:
          requires:
            - test_translator
            - test_reporter
            - test_others
